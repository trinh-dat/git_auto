*** Settings ***
Library           String
Library           AppiumLibrary
Library           Collections
Resource          resource_inspectorio_app.robot

*** Variables ***
${NSN}            nokia_siemens_networks

*** Test Cases ***
For-Loop-In-Range
    : FOR    ${INDEX}    IN RANGE    1    2
    \    Log    ${INDEX}nd color
    \    ${RANDOM_STRING}=    Generate Random String    ${INDEX}
    \    Log    ${RANDOM_STRING}

For-Loop-Elements
    @{ITEMS}    Create List    Star Trek    Star Wars    Perry Rhodan
    : FOR    ${ELEMENT}    IN    @{ITEMS}
    \    Log    ${ELEMENT}
    \    ${ELEMENT}    Replace String    ${ELEMENT}    ${SPACE}    ${EMPTY}
    \    Log    ${ELEMENT}

For-Loop-Exiting
    @{ITEMS}    Create List    Good Element 1    Break On Me    Good Element 2
    : FOR    ${ELEMENT}    IN    @{ITEMS}
    \    Log    ${ELEMENT}
    \    Run Keyword If    '${ELEMENT}' == 'Break On Me'    Exit For Loop
    \    Log    Do more actions here ...

Repeat-Action
    Repeat Keyword    2    Log    Repeating this ...

While-Loop
    : FOR    ${i}    IN RANGE    999999
    \    Exit For Loop If    ${i} == 9
    \    Log    ${i}
    Log    Exited

Multiple Conditions
    ${color} =    set variable    Red
    Run Keyword If    '${color}' == 'Red'    log to console    \nexecuted with single condition
    Run Keyword If    ('${color}'=='Red' and True==True) or '${color}'=='Blue' or '${color}'=='Pink'    log to console    \nexecuted with multiple or
    ${color} =    set variable    Blue
    ${Size} =    set variable    Small
    ${Simple} =    set variable    Simple
    ${Design} =    set variable    Simple
    Run Keyword If    '${color}' == 'Blue' and '${Size}' == 'Small' and '${Design}' != '${Simple}'    log to console    \nexecuted with multiple and
    ${Size} =    set variable    XL
    ${Design} =    set variable    Complicated
    Run Keyword Unless    '${color}' == 'Black' or '${Size}' == 'Small' or '${Design}' == 'Simple'    log to console    \nexecuted with unless and multiple or

Create_Dict_With_If_Clause
    ${position}    Set Variable    'last'
    ${RECENT_ITEM_SELECTOR}    Set Variable    any text    3
    ${ITEM_SELECTOR} =    Run Keyword If    ${position} == 'last'    Set variable    ${RECENT_ITEM_SELECTOR}:last-child
    ...    ELSE    Set variable    ${RECENT_ITEM_SELECTOR}:nth-child(${position})

If_Clause_And_Else_If_Clause
    ${rs} =    Set Variable    False
    Run Keyword If    ${rs} == True    Log    'THIS IS IF CLAUSE'
    ...    ELSE IF    ${rs} == False    Log    ELSE CLAUSE

Create List Test Case
    @{MyList}=    Create List    item1    item2    item3
    Append To List    ${MyList}    item4
    Log List    ${MyList}
    List Should Contain Value    ${MyList}    item4

Run-Keyword-If-Else
    ${result}=    Run keyword and ignore error    Element should be visible    ${node A}
    Run keyword if    '${result[0]}' == 'PASS'
    ...    ELSE    click element    ${node A}
    ...    ELSE    click element    ${node B}

Fetch From Left
    ${NSN}    set variable    nokia_siemens_networks
    ${result} =    Fetch From Left    ${NSN}    _siemens
    Should be Equal    ${result}    nokia

Get Substring
    ${result} =    Get Substring    Robot    2    5
    Should be equal    ${result}    bot

Get Substring With Negative Values
    ${result} =    Get Substring    Hello Robot    -3    -1
    Should be equal    ${result}    bo

Get Substring With Start Only
    ${result} =    Get Substring    Hello Robot    6
    Should be equal    ${result}    Robot

Get Substring With Empty Start
    ${result} =    Get Substring    Hello Robot    ${EMPTY}    5
    Should be equal    ${result}    Hello

Get From List
    ${L4}    Create list    41    42    43    44
    ${value} =    Get From List    ${L4}    1
    Should Be Equal As Integers    ${value}    42
    ${value} =    Get From List    ${L4}    -2
    Should Be Equal As Integers    ${value}    43

testttt
    @{list_first_sizes} =    Create List    50.1    44.2    43.3
    ${count}    Set Variable    0
    : FOR    ${ITEM}    IN    @{list_first_sizes}
    \    Log    ${ITEM}
    \    ${count}    Evaluate    ${count} + 1
    \    Log    Index = ${count}
